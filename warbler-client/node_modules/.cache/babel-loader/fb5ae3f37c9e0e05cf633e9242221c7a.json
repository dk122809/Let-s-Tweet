{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Desktop/warbler/warbler-client/src/Auth/Index.js\";\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Signin from './Signin';\nimport Signup from './Signup';\nimport * as Api from '../ApiHandle';\n\nconst Index = props => {\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: '',\n    username: ''\n  });\n  const location = useLocation();\n\n  const handleAuthChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  };\n\n  const handleAuthSubmit = async e => {\n    e.preventDefault();\n    let apiLink = '/auth/signin';\n    let apiData = {\n      email: loginData.email,\n      password: loginData.password\n    };\n    let resp = await Api.apiHandle(apiLink, apiData, 'post');\n    localStorage.setItem('isLogin', true);\n  };\n\n  const handleSignUpSubmit = async e => {\n    e.preventDefault();\n    let apiLink = '/auth/signup';\n    let apiData = loginData;\n    let resp = await Api.apiHandle(apiLink, apiData, 'post');\n    localStorage.setItem('isLogin', true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, location.pathname === '/login' ? /*#__PURE__*/React.createElement(Signin, {\n    handleChange: handleAuthChange,\n    handleAuthSubmit: handleAuthSubmit,\n    email: loginData.email,\n    password: loginData.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Signup, {\n    handleChange: handleAuthChange,\n    handleAuthSubmit: handleSignUpSubmit,\n    email: loginData.email,\n    password: loginData.password,\n    username: loginData.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/deepak/Desktop/warbler/warbler-client/src/Auth/Index.js"],"names":["React","useState","useLocation","Signin","Signup","Api","Index","props","loginData","setLoginData","email","password","username","location","handleAuthChange","e","name","value","target","prevData","handleAuthSubmit","preventDefault","apiLink","apiData","resp","apiHandle","localStorage","setItem","handleSignUpSubmit","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAS;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC;AACvCS,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,QAAQ,EAAE;AAH6B,GAAD,CAA1C;AAKA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,gBAAgB,GAAIC,CAAD,IAAK;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAT,IAAAA,YAAY,CAAEU,QAAD,IAAY;AACrB,aAAO,EACH,GAAGA,QADA;AAEH,SAACH,IAAD,GAAQC;AAFL,OAAP;AAIH,KALW,CAAZ;AAMH,GARD;;AAWA,QAAMG,gBAAgB,GAAG,MAAOL,CAAP,IAAW;AAChCA,IAAAA,CAAC,CAACM,cAAF;AACA,QAAIC,OAAO,GAAG,cAAd;AACA,QAAIC,OAAO,GAAG;AACVb,MAAAA,KAAK,EAAEF,SAAS,CAACE,KADP;AAEVC,MAAAA,QAAQ,EAAEH,SAAS,CAACG;AAFV,KAAd;AAIA,QAAIa,IAAI,GAAG,MAAMnB,GAAG,CAACoB,SAAJ,CAAcH,OAAd,EAAsBC,OAAtB,EAA8B,MAA9B,CAAjB;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+B,IAA/B;AACH,GATD;;AAWA,QAAMC,kBAAkB,GAAG,MAAOb,CAAP,IAAW;AAClCA,IAAAA,CAAC,CAACM,cAAF;AACA,QAAIC,OAAO,GAAG,cAAd;AACA,QAAIC,OAAO,GAAGf,SAAd;AACA,QAAIgB,IAAI,GAAG,MAAMnB,GAAG,CAACoB,SAAJ,CAAcH,OAAd,EAAsBC,OAAtB,EAA8B,MAA9B,CAAjB;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+B,IAA/B;AACH,GAND;;AAOA,sBACI,0CACKd,QAAQ,CAACgB,QAAT,KAAsB,QAAtB,gBACD,oBAAC,MAAD;AACA,IAAA,YAAY,EAAEf,gBADd;AAEA,IAAA,gBAAgB,EAAEM,gBAFlB;AAGA,IAAA,KAAK,EAAEZ,SAAS,CAACE,KAHjB;AAIA,IAAA,QAAQ,EAAEF,SAAS,CAACG,QAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,gBAQD,oBAAC,MAAD;AACA,IAAA,YAAY,EAAEG,gBADd;AAEA,IAAA,gBAAgB,EAAEc,kBAFlB;AAGA,IAAA,KAAK,EAAEpB,SAAS,CAACE,KAHjB;AAIA,IAAA,QAAQ,EAAEF,SAAS,CAACG,QAJpB;AAKA,IAAA,QAAQ,EAAEH,SAAS,CAACI,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAoBH,CAzDD;;AA2DA,eAAeN,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Signin from './Signin';\nimport Signup from './Signup';\nimport * as Api from '../ApiHandle';\n\nconst Index = (props)=>{\n    const [loginData, setLoginData] = useState({\n        email: '',\n        password: '',\n        username: ''\n    });\n    const location = useLocation();\n\n    const handleAuthChange = (e)=>{\n        const {name, value} = e.target;\n        setLoginData((prevData)=>{\n            return {\n                ...prevData,\n                [name]: value\n            }\n        });\n    }\n    \n\n    const handleAuthSubmit = async (e)=>{\n        e.preventDefault();\n        let apiLink = '/auth/signin';\n        let apiData = {\n            email: loginData.email,\n            password: loginData.password\n        }\n        let resp = await Api.apiHandle(apiLink,apiData,'post'); \n        localStorage.setItem('isLogin',true);\n    }\n\n    const handleSignUpSubmit = async (e)=>{\n        e.preventDefault();\n        let apiLink = '/auth/signup';\n        let apiData = loginData\n        let resp = await Api.apiHandle(apiLink,apiData,'post'); \n        localStorage.setItem('isLogin',true);\n    }\n    return(\n        <>\n            {location.pathname === '/login'?\n            <Signin \n            handleChange={handleAuthChange}\n            handleAuthSubmit={handleAuthSubmit}\n            email={loginData.email}\n            password={loginData.password}\n            />\n            :\n            <Signup \n            handleChange={handleAuthChange}\n            handleAuthSubmit={handleSignUpSubmit}\n            email={loginData.email}\n            password={loginData.password}\n            username={loginData.username}\n            />\n            }\n         </>\n    )\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}