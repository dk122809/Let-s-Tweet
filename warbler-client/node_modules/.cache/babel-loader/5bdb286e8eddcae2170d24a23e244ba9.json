{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Desktop/warbler/warbler-client/src/Auth/User.js\";\nimport React, { useEffect, useState } from \"react\";\nimport * as Api from \"../ApiHandle\";\nimport MessageCard from \"../Message/MessageCard\";\n\nconst User = props => {\n  const [allData, setAllData] = useState([]);\n  useEffect(() => {\n    const messages = async () => {\n      let apiLink = \"/messages\";\n      let resp = await Api.apiHandle(apiLink, \"\", \"get\");\n      let filterResp = resp.data.filter(e => {\n        return e.user._id === props.userAuth.userId;\n      });\n      setAllData(() => {\n        return filterResp;\n      });\n    };\n\n    messages();\n  }, [props.userAuth.userId]);\n\n  const deleteMessage = async id => {\n    let apiLink = `/users/${props.userAuth.userId}/messages/${id}`;\n    let resp = await Api.apiHandle(apiLink, \"\", \"DELETE\", props.userAuth.userToken);\n    setAllData(prevData => {\n      let filterResp = prevData.filter(e => {\n        return e._id !== resp.data._id;\n      });\n      return filterResp;\n    });\n  };\n\n  const displayMsg = allData.map(v => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MessageCard, {\n    key: v._id,\n    msg: v.text,\n    username: v.user.username,\n    date: v.createdAt,\n    onDelete: deleteMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => deleteMessage(v._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Delete\")));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Messages\"), displayMsg);\n};\n\nexport default User;","map":{"version":3,"sources":["/home/deepak/Desktop/warbler/warbler-client/src/Auth/User.js"],"names":["React","useEffect","useState","Api","MessageCard","User","props","allData","setAllData","messages","apiLink","resp","apiHandle","filterResp","data","filter","e","user","_id","userAuth","userId","deleteMessage","id","userToken","prevData","displayMsg","map","v","text","username","createdAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3B,UAAIC,OAAO,GAAG,WAAd;AACA,UAAIC,IAAI,GAAG,MAAMR,GAAG,CAACS,SAAJ,CAAcF,OAAd,EAAuB,EAAvB,EAA2B,KAA3B,CAAjB;AACA,UAAIG,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUC,MAAV,CAAkBC,CAAD,IAAO;AACvC,eAAOA,CAAC,CAACC,IAAF,CAAOC,GAAP,KAAeZ,KAAK,CAACa,QAAN,CAAeC,MAArC;AACD,OAFgB,CAAjB;AAGAZ,MAAAA,UAAU,CAAC,MAAM;AACf,eAAOK,UAAP;AACD,OAFS,CAAV;AAGD,KATD;;AAUAJ,IAAAA,QAAQ;AACT,GAZQ,EAYN,CAACH,KAAK,CAACa,QAAN,CAAeC,MAAhB,CAZM,CAAT;;AAcA,QAAMC,aAAa,GAAG,MAAOC,EAAP,IAAc;AAClC,QAAIZ,OAAO,GAAI,UAASJ,KAAK,CAACa,QAAN,CAAeC,MAAO,aAAYE,EAAG,EAA7D;AACA,QAAIX,IAAI,GAAG,MAAMR,GAAG,CAACS,SAAJ,CACfF,OADe,EAEf,EAFe,EAGf,QAHe,EAIfJ,KAAK,CAACa,QAAN,CAAeI,SAJA,CAAjB;AAMAf,IAAAA,UAAU,CAAEgB,QAAD,IAAc;AACvB,UAAIX,UAAU,GAAGW,QAAQ,CAACT,MAAT,CAAiBC,CAAD,IAAO;AACtC,eAAOA,CAAC,CAACE,GAAF,KAAUP,IAAI,CAACG,IAAL,CAAUI,GAA3B;AACD,OAFgB,CAAjB;AAGA,aAAOL,UAAP;AACD,KALS,CAAV;AAMD,GAdD;;AAgBA,QAAMY,UAAU,GAAGlB,OAAO,CAACmB,GAAR,CAAaC,CAAD,iBAC3B,uDACF,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACT,GADT;AAEE,IAAA,GAAG,EAAES,CAAC,CAACC,IAFT;AAGE,IAAA,QAAQ,EAAED,CAAC,CAACV,IAAF,CAAOY,QAHnB;AAIE,IAAA,IAAI,EAAEF,CAAC,CAACG,SAJV;AAKE,IAAA,QAAQ,EAAET,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,eAQA;AAAM,IAAA,OAAO,EAAE,MAAMA,aAAa,CAACM,CAAC,CAACT,GAAH,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,CADe,CAAnB;AAYA,sBACE,uDACE;AAAI,IAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGO,UAFH,CADF;AAMD,CAlDD;;AAoDA,eAAepB,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as Api from \"../ApiHandle\";\nimport MessageCard from \"../Message/MessageCard\";\n\nconst User = (props) => {\n  const [allData, setAllData] = useState([]);\n  useEffect(() => {\n    const messages = async () => {\n      let apiLink = \"/messages\";\n      let resp = await Api.apiHandle(apiLink, \"\", \"get\");\n      let filterResp = resp.data.filter((e) => {\n        return e.user._id === props.userAuth.userId;\n      });\n      setAllData(() => {\n        return filterResp;\n      });\n    };\n    messages();\n  }, [props.userAuth.userId]);\n\n  const deleteMessage = async (id) => {\n    let apiLink = `/users/${props.userAuth.userId}/messages/${id}`;\n    let resp = await Api.apiHandle(\n      apiLink,\n      \"\",\n      \"DELETE\",\n      props.userAuth.userToken\n    );\n    setAllData((prevData) => {\n      let filterResp = prevData.filter((e) => {\n        return e._id !== resp.data._id;\n      });\n      return filterResp;\n    });\n  };\n\n  const displayMsg = allData.map((v) => (\n      <>\n    <MessageCard\n      key={v._id}\n      msg={v.text}\n      username={v.user.username}\n      date={v.createdAt}\n      onDelete={deleteMessage}\n    />\n      <span onClick={() => deleteMessage(v._id)}>Delete</span>\n    </>\n  ));\n  return (\n    <>\n      <h1 align=\"center\">Messages</h1>\n      {displayMsg}\n    </>\n  );\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}