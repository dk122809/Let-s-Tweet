{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Desktop/warbler/warbler-client/src/Auth/Index.js\";\nimport React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Signin from \"./Signin\";\nimport Signup from \"./Signup\";\nimport * as Api from \"../ApiHandle\";\n\nconst Index = props => {\n  const location = useLocation();\n  const history = useHistory();\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\"\n  });\n\n  const handleAuthChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  };\n\n  const handleAuthSubmit = async e => {\n    e.preventDefault();\n    let apiLink = \"/auth/signin\";\n    let apiData = {\n      email: loginData.email,\n      password: loginData.password\n    };\n    let resp = await Api.apiHandle(apiLink, apiData, \"post\");\n\n    if (resp.status === 200) {\n      props.setIsLogin(true);\n      props.setUserAuth(() => {\n        return {\n          userId: resp.data.id,\n          userToken: resp.data.token\n        };\n      });\n      props.setSuccessRespMsg(`Welcome Back :- ${resp.data.username}`);\n      history.push(\"/\");\n    } else {\n      props.setErrorRespMsg(resp.data.error.message);\n    }\n  };\n\n  const handleSignUpSubmit = async e => {\n    e.preventDefault();\n    let apiLink = \"/auth/signup\";\n    let apiData = loginData;\n    let resp = await Api.apiHandle(apiLink, apiData, \"post\");\n\n    if (resp.status === 200) {\n      props.setIsLogin(true);\n      props.setUserAuth(() => {\n        return {\n          userId: resp.data.id,\n          userToken: resp.data.token\n        };\n      });\n      props.setSuccessRespMsg(`You Have Successfuly Register`);\n      history.push(\"/\");\n    } else {\n      props.setErrorRespMsg(resp.data.error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, location.pathname === \"/login\" ? /*#__PURE__*/React.createElement(Signin, {\n    handleChange: handleAuthChange,\n    handleAuthSubmit: handleAuthSubmit,\n    email: loginData.email,\n    password: loginData.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Signup, {\n    handleChange: handleAuthChange,\n    handleAuthSubmit: handleSignUpSubmit,\n    email: loginData.email,\n    password: loginData.password,\n    username: loginData.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/deepak/Desktop/warbler/warbler-client/src/Auth/Index.js"],"names":["React","useState","useLocation","useHistory","Signin","Signup","Api","Index","props","location","history","loginData","setLoginData","email","password","username","handleAuthChange","e","name","value","target","prevData","handleAuthSubmit","preventDefault","apiLink","apiData","resp","apiHandle","status","setIsLogin","setUserAuth","userId","data","id","userToken","token","setSuccessRespMsg","push","setErrorRespMsg","error","message","handleSignUpSubmit","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC;AACzCY,IAAAA,KAAK,EAAE,EADkC;AAEzCC,IAAAA,QAAQ,EAAE,EAF+B;AAGzCC,IAAAA,QAAQ,EAAE;AAH+B,GAAD,CAA1C;;AAMA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAR,IAAAA,YAAY,CAAES,QAAD,IAAc;AACzB,aAAO,EACL,GAAGA,QADE;AAEL,SAACH,IAAD,GAAQC;AAFH,OAAP;AAID,KALW,CAAZ;AAMD,GARD;;AAUA,QAAMG,gBAAgB,GAAG,MAAOL,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACM,cAAF;AACA,QAAIC,OAAO,GAAG,cAAd;AACA,QAAIC,OAAO,GAAG;AACZZ,MAAAA,KAAK,EAAEF,SAAS,CAACE,KADL;AAEZC,MAAAA,QAAQ,EAAEH,SAAS,CAACG;AAFR,KAAd;AAIA,QAAIY,IAAI,GAAG,MAAMpB,GAAG,CAACqB,SAAJ,CAAcH,OAAd,EAAuBC,OAAvB,EAAgC,MAAhC,CAAjB;;AACA,QAAIC,IAAI,CAACE,MAAL,KAAgB,GAApB,EAAyB;AACvBpB,MAAAA,KAAK,CAACqB,UAAN,CAAiB,IAAjB;AACArB,MAAAA,KAAK,CAACsB,WAAN,CAAkB,MAAM;AACtB,eAAO;AACLC,UAAAA,MAAM,EAAEL,IAAI,CAACM,IAAL,CAAUC,EADb;AAELC,UAAAA,SAAS,EAAER,IAAI,CAACM,IAAL,CAAUG;AAFhB,SAAP;AAID,OALD;AAMA3B,MAAAA,KAAK,CAAC4B,iBAAN,CAAyB,mBAAkBV,IAAI,CAACM,IAAL,CAAUjB,QAAS,EAA9D;AACAL,MAAAA,OAAO,CAAC2B,IAAR,CAAa,GAAb;AACD,KAVD,MAUO;AACL7B,MAAAA,KAAK,CAAC8B,eAAN,CAAsBZ,IAAI,CAACM,IAAL,CAAUO,KAAV,CAAgBC,OAAtC;AACD;AACF,GArBD;;AAuBA,QAAMC,kBAAkB,GAAG,MAAOxB,CAAP,IAAa;AACtCA,IAAAA,CAAC,CAACM,cAAF;AACA,QAAIC,OAAO,GAAG,cAAd;AACA,QAAIC,OAAO,GAAGd,SAAd;AACA,QAAIe,IAAI,GAAG,MAAMpB,GAAG,CAACqB,SAAJ,CAAcH,OAAd,EAAuBC,OAAvB,EAAgC,MAAhC,CAAjB;;AACA,QAAIC,IAAI,CAACE,MAAL,KAAgB,GAApB,EAAyB;AACvBpB,MAAAA,KAAK,CAACqB,UAAN,CAAiB,IAAjB;AACArB,MAAAA,KAAK,CAACsB,WAAN,CAAkB,MAAM;AACtB,eAAO;AACLC,UAAAA,MAAM,EAAEL,IAAI,CAACM,IAAL,CAAUC,EADb;AAELC,UAAAA,SAAS,EAAER,IAAI,CAACM,IAAL,CAAUG;AAFhB,SAAP;AAID,OALD;AAMA3B,MAAAA,KAAK,CAAC4B,iBAAN,CAAyB,+BAAzB;AACA1B,MAAAA,OAAO,CAAC2B,IAAR,CAAa,GAAb;AACD,KAVD,MAUO;AACL7B,MAAAA,KAAK,CAAC8B,eAAN,CAAsBZ,IAAI,CAACM,IAAL,CAAUO,KAAV,CAAgBC,OAAtC;AACD;AACF,GAlBD;;AAmBA,sBACE,0CACG/B,QAAQ,CAACiC,QAAT,KAAsB,QAAtB,gBACC,oBAAC,MAAD;AACE,IAAA,YAAY,EAAE1B,gBADhB;AAEE,IAAA,gBAAgB,EAAEM,gBAFpB;AAGE,IAAA,KAAK,EAAEX,SAAS,CAACE,KAHnB;AAIE,IAAA,QAAQ,EAAEF,SAAS,CAACG,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAQC,oBAAC,MAAD;AACE,IAAA,YAAY,EAAEE,gBADhB;AAEE,IAAA,gBAAgB,EAAEyB,kBAFpB;AAGE,IAAA,KAAK,EAAE9B,SAAS,CAACE,KAHnB;AAIE,IAAA,QAAQ,EAAEF,SAAS,CAACG,QAJtB;AAKE,IAAA,QAAQ,EAAEH,SAAS,CAACI,QALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF;AAoBD,CAjFD;;AAmFA,eAAeR,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Signin from \"./Signin\";\nimport Signup from \"./Signup\";\nimport * as Api from \"../ApiHandle\";\n\nconst Index = (props) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n\n  const handleAuthChange = (e) => {\n    const { name, value } = e.target;\n    setLoginData((prevData) => {\n      return {\n        ...prevData,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleAuthSubmit = async (e) => {\n    e.preventDefault();\n    let apiLink = \"/auth/signin\";\n    let apiData = {\n      email: loginData.email,\n      password: loginData.password,\n    };\n    let resp = await Api.apiHandle(apiLink, apiData, \"post\");\n    if (resp.status === 200) {\n      props.setIsLogin(true);\n      props.setUserAuth(() => {\n        return {\n          userId: resp.data.id,\n          userToken: resp.data.token,\n        };\n      });\n      props.setSuccessRespMsg(`Welcome Back :- ${resp.data.username}`);\n      history.push(\"/\");\n    } else {\n      props.setErrorRespMsg(resp.data.error.message);\n    }\n  };\n\n  const handleSignUpSubmit = async (e) => {\n    e.preventDefault();\n    let apiLink = \"/auth/signup\";\n    let apiData = loginData;\n    let resp = await Api.apiHandle(apiLink, apiData, \"post\");\n    if (resp.status === 200) {\n      props.setIsLogin(true);\n      props.setUserAuth(() => {\n        return {\n          userId: resp.data.id,\n          userToken: resp.data.token,\n        };\n      });\n      props.setSuccessRespMsg(`You Have Successfuly Register`);\n      history.push(\"/\");\n    } else {\n      props.setErrorRespMsg(resp.data.error.message);\n    }\n  };\n  return (\n    <>\n      {location.pathname === \"/login\" ? (\n        <Signin\n          handleChange={handleAuthChange}\n          handleAuthSubmit={handleAuthSubmit}\n          email={loginData.email}\n          password={loginData.password}\n        />\n      ) : (\n        <Signup\n          handleChange={handleAuthChange}\n          handleAuthSubmit={handleSignUpSubmit}\n          email={loginData.email}\n          password={loginData.password}\n          username={loginData.username}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}