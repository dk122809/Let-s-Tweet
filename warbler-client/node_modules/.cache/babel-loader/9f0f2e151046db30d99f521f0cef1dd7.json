{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Desktop/warbler/warbler-client/src/Auth/User.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as Api from '../ApiHandle';\n\nconst User = props => {\n  const [allData, setAllData] = useState([]);\n  useEffect(() => {\n    const messages = async () => {\n      let apiLink = '/messages';\n      let resp = await Api.apiHandle(apiLink, '', 'get');\n      let filterResp = resp.data.filter(e => {\n        return e.user._id === props.userAuth.userId;\n      });\n      setAllData(() => {\n        return filterResp;\n      });\n    };\n\n    messages();\n  }, [props.userAuth.userId]);\n\n  const deleteMessage = async id => {\n    let apiLink = `/users/${props.userAuth.userId}/messages/${id}`;\n    let resp = await Api.apiHandle(apiLink, '', 'DELETE', props.userAuth.userToken);\n    setAllData(prevData => {\n      let filterResp = prevData.filter(e => {\n        return e._id !== resp.data._id;\n      });\n      return filterResp;\n    });\n  };\n\n  const displayMsg = allData.map(v => /*#__PURE__*/React.createElement(\"h1\", {\n    key: v._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"msg: \", v.text, \", username: \", v.user._id, \", date: \", v.createdAt, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => deleteMessage(v._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 80\n    }\n  }, \"Delete\")));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Messages\"), displayMsg);\n};\n\nexport default User;","map":{"version":3,"sources":["/home/deepak/Desktop/warbler/warbler-client/src/Auth/User.js"],"names":["React","useEffect","useState","Api","User","props","allData","setAllData","messages","apiLink","resp","apiHandle","filterResp","data","filter","e","user","_id","userAuth","userId","deleteMessage","id","userToken","prevData","displayMsg","map","v","text","createdAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMO,QAAQ,GAAG,YAAU;AACvB,UAAIC,OAAO,GAAG,WAAd;AACA,UAAIC,IAAI,GAAG,MAAMP,GAAG,CAACQ,SAAJ,CAAcF,OAAd,EAAsB,EAAtB,EAAyB,KAAzB,CAAjB;AACA,UAAIG,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUC,MAAV,CAAkBC,CAAD,IAAK;AACnC,eAAOA,CAAC,CAACC,IAAF,CAAOC,GAAP,KAAeZ,KAAK,CAACa,QAAN,CAAeC,MAArC;AACH,OAFgB,CAAjB;AAGAZ,MAAAA,UAAU,CAAC,MAAI;AACX,eAAOK,UAAP;AACH,OAFS,CAAV;AAGH,KATD;;AAUAJ,IAAAA,QAAQ;AACX,GAZQ,EAYP,CAACH,KAAK,CAACa,QAAN,CAAeC,MAAhB,CAZO,CAAT;;AAcA,QAAMC,aAAa,GAAG,MAAOC,EAAP,IAAY;AAC9B,QAAIZ,OAAO,GAAI,UAASJ,KAAK,CAACa,QAAN,CAAeC,MAAO,aAAYE,EAAG,EAA7D;AACA,QAAIX,IAAI,GAAG,MAAMP,GAAG,CAACQ,SAAJ,CAAcF,OAAd,EAAsB,EAAtB,EAAyB,QAAzB,EAAmCJ,KAAK,CAACa,QAAN,CAAeI,SAAlD,CAAjB;AACAf,IAAAA,UAAU,CAAEgB,QAAD,IAAY;AACnB,UAAIX,UAAU,GAAGW,QAAQ,CAACT,MAAT,CAAiBC,CAAD,IAAK;AAClC,eAAOA,CAAC,CAACE,GAAF,KAAUP,IAAI,CAACG,IAAL,CAAUI,GAA3B;AACH,OAFgB,CAAjB;AAGA,aAAOL,UAAP;AACH,KALS,CAAV;AAMH,GATD;;AAWA,QAAMY,UAAU,GAAGlB,OAAO,CAACmB,GAAR,CAAaC,CAAD,iBAC/B;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACT,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsBS,CAAC,CAACC,IAAxB,kBAA0CD,CAAC,CAACV,IAAF,CAAOC,GAAjD,cAA8DS,CAAC,CAACE,SAAhE,oBAA2E;AAAM,IAAA,OAAO,EAAE,MAAIR,aAAa,CAACM,CAAC,CAACT,GAAH,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3E,CADmB,CAAnB;AAGA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKO,UAFL,CADJ;AAMH,CApCD;;AAsCA,eAAepB,IAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport * as Api from '../ApiHandle';\n\nconst User = (props)=>{\n    const [allData, setAllData] = useState([]);\n    useEffect(()=>{  \n        const messages = async ()=>{\n            let apiLink = '/messages';\n            let resp = await Api.apiHandle(apiLink,'','get');\n            let filterResp = resp.data.filter((e)=>{\n                return e.user._id === props.userAuth.userId;\n            });\n            setAllData(()=>{\n                return filterResp;\n            });\n        }       \n        messages();\n    },[props.userAuth.userId]);    \n\n    const deleteMessage = async (id)=>{\n        let apiLink = `/users/${props.userAuth.userId}/messages/${id}`;\n        let resp = await Api.apiHandle(apiLink,'','DELETE', props.userAuth.userToken);\n        setAllData((prevData)=>{\n            let filterResp = prevData.filter((e)=>{\n                return e._id !== resp.data._id;\n            });\n            return filterResp;\n        });\n    }\n\n    const displayMsg = allData.map((v)=>(\n    <h1 key={v._id}>msg: {v.text}, username: {v.user._id}, date: {v.createdAt} <span onClick={()=>deleteMessage(v._id)}>Delete</span></h1>\n    ))\n    return(\n        <>\n            <h1>Messages</h1>\n            {displayMsg}\n        </>\n    )\n};\n\nexport default User;"]},"metadata":{},"sourceType":"module"}